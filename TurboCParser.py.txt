import ply.yacc as build
from TurboCLexer import tokens
##Terrence Gaines CSC 4330
##This is my compiler that will check any program to see if it obeys the rules
def p_rule_1(p):
    """rule : ID ASSIGN expr SEMI"""
    p[0] = [
     [
      'id', p[1]], '=', p[3]]


def p_rule_2(p):
    """rule : LBRACE mylist RBRACE"""
    p[0] = p[2]


def p_rule_3(p):
    """rule : IF LPAREN expr RPAREN rule"""
    p[0] = [
     'if', p[3], p[5]]


def p_rule_4(p):
    """rule : WHILE LPAREN expr RPAREN rule"""
    p[0] = [
     'while', p[3], p[5]]


def p_mylist_1(p):
    """mylist : rule"""
    p[0] = p[1]


def p_mylist_2(p):
    """mylist : mylist rule"""
    p[0] = p[1] + p[2]


def p_expr_1(p):
    """expr : ID"""
    p[0] = [
     'id', p[1]]


def p_expr_2(p):
    """expr : NUM"""
    p[0] = [
     'num', p[1]]


def p_expr_3(p):
    """expr : expr OPTR expr"""
    p[0] = [
     p[1], ['optr', p[2]], p[3]]


def p_error(p):
    print('Your Program has an error!')


parser = build.yacc()
